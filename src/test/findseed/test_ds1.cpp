#include <iostream>
#include "test_ds.hpp"

namespace {

    class TestDS1 : public TestDS
    {
    protected:
        TestDS1() {
            IFNAME1 = (char *)"hsa_mirbase_1.txt";
            IFNAME2 = (char *)"utr1.txt";
            OFNAME1 = (char *)"test_output_1.txt";
            OFNAME2 = (char *)"test_ds1.txt";
        }
    };

    TEST_F(TestDS1, mirna_fasta) {
        read_files();

        EXPECT_EQ(2u, length(mirna_ids));
        EXPECT_STREQ("hsa-miR-124 MIMAT0000422", seqan::toCString(mirna_ids[0]));
        EXPECT_STREQ("hsa-miR-1 MIMAT0000416", seqan::toCString(mirna_ids[1]));

        EXPECT_EQ(2u, length(mirna_seqs));
        const char *seq1 = "UAAGGCACGCGGUGAAUGCC";
        EXPECT_STREQ(seq1, seqan::toCString((seqan::CharString)mirna_seqs[0]));

        const char *seq2 = "UGGAAUGUAAAGAAGUAUGUAU";
        EXPECT_STREQ(seq2, seqan::toCString((seqan::CharString)mirna_seqs[1]));
    }

    TEST_F(TestDS1, mrna_fasta) {
        read_files();

        EXPECT_EQ(4u, length(mrna_ids));

        const char *id1 = "hg18_refGene NM_000165 range=chr6:121810842-121812572 5'pad=0 3'pad=0 "
                "revComp=FALSE strand=+ repeatMasking=none";
        EXPECT_STREQ(id1, seqan::toCString(mrna_ids[0]));

        const char *id2 = "hg18_refGene NM_020347 range=chr3:45840450-45842809 5'pad=0 3'pad=0 "
                "revComp=TRUE strand=- repeatMasking=none";
        EXPECT_STREQ(id2, seqan::toCString(mrna_ids[1]));

        const char *id3 = "hg18_refGene NM_000696 range=chr1:163898073-163898910 5'pad=0 3'pad=0 "
                "revComp=TRUE strand=- repeatMasking=none";
        EXPECT_STREQ(id3, seqan::toCString(mrna_ids[2]));

        const char *id4 = "hg18_refGene NM_001980 range=chr12:129840102-129842397 5'pad=0 3'pad=0 "
                "revComp=TRUE strand=- repeatMasking=none";
        EXPECT_STREQ(id4, seqan::toCString(mrna_ids[3]));


        EXPECT_EQ(4u, length(mrna_seqs));
        const char *seq1 = "AUACAGGCUUGAAAGCAUCAAGAUUCCACUCAAUUGUGGAGAAGAAAAAA"
                "GGUGCUGUAGAAAGUGCACCAGGUGUUAAUUUUGAUCCGGUGGAGGUGGU"
                "ACUCAACAGCCUUAUUCAUGAGGCUUAGAAAACACAAAGACAUUAGAAUA"
                "CCUAGGUUCACUGGGGGUGUAUGGGGUAGAUGGGUGGAGAGGGAGGGGAU"
                "AAGAGAGGUGCAUGUUGGUAUUUAAAGUAGUGGAUUCAAAGAACUUAGAU"
                "UAUAAAUAAGAGUUCCAUUAGGUGAUACAUAGAUAAGGGCUUUUUCUCCC"
                "CGCAAACACCCCUAAGAAUGGUUCUGUGUAUGUGAAUGAGCGGGUGGUAA"
                "UUGUGGCUAAAUAUUUUUGUUUUACCAAGAAACUGAAAUAAUUCUGGCCA"
                "GGAAUAAAUACUUCCUGAACAUCUUAGGUCUUUUCAACAAGAAAAAGACA"
                "GAGGAUUGUCCUUAAGUCCCUGCUAAAACAUUCCAUUGUUAAAAUUUGCA"
                "CUUUGAAGGUAAGCUUUCUAGGCCUGACCCUCCAGGUGUCAAUGGACUUG"
                "UGCUACUAUAUUUUUUUAUUCUUGGUAUCAGUUUAAAAUUCAGACAAGGC"
                "CCACAGAAUAAGAUUUUCCAUGCAUUUGCAAAUACGUAUAUUCUUUUUCC"
                "AUCCACUUGCACAAUAUCAUUACCAUCACUUUUUCAUCAUUCCUCAGCUA"
                "CUACUCACAUUCAUUUAAUGGUUUCUGUAAACAUUUUUAAGACAGUUGGG"
                "AUGUCACUUAACAUUUUUUUUUUGAGCUAAAGUCAGGGAAUCAAGCCAUG"
                "CUUAAUAUUUAACAAUCACUUAUAUGUGUGUCGAAGAGUUUGUUUUGUUU"
                "GUCAUGUAUUGGUACAAGCAGAUACAGUAUAAACUCACAAACACAGAUUU"
                "GAAAAUAAUGCACAUAUGGUGUUCAAAUUUGAACCUUUCUCAUGGAUUUU"
                "UGUGGUGUGGGCCAAUAUGGUGUUUACAUUAUAUAAUUCCUGCUGUGGCA"
                "AGUAAAGCACACUUUUUUUUUCUCCUAAAAUGUUUUUCCCUGUGUAUCCU"
                "AUUAUGGAUACUGGUUUUGUUAAUUAUGAUUCUUUAUUUUCUCUCCUUUU"
                "UUUAGGAUAUAGCAGUAAUGCUAUUACUGAAAUGAAUUUCCUUUUUCUGA"
                "AAUGUAAUCAUUGAUGCUUGAAUGAUAGAAUUUUAGUACUGUAAACAGGC"
                "UUUAGUCAUUAAUGUGAGAGACUUAGAAAAAAUGCUUAGAGUGGACUAUU"
                "AAAUGUGCCUAAAUGAAUUUUGCAGUAACUGGUAUUCUUGGGUUUUCCUA"
                "CUUAAUACACAGUAAUUCAGAACUUGUAUUCUAUUAUGAGUUUAGCAGUC"
                "UUUUGGAGUGACCAGCAACUUUGAUGUUUGCACUAAGAUUUUAUUUGGAA"
                "UGCAAGAGAGGUUGAAAGAGGAUUCAGUAGUACACAUACAACUAAUUUAU"
                "UUGAACUAUAUGUUGAAGACAUCUACCAGUUUCUCCAAAUGCCUUUUUUA"
                "AAACUCAUCACAGAAGAUUGGUGAAAAUGCUGAGUAUGACACUUUUCUUC"
                "UUGCAUGCAUGUCAGCUACAUAAACAGUUUUGUACAAUGAAAAUUACUAA"
                "UUUGUUUGACAUUCCAUGUUAAACUACGGUCAUGUUCAGCUUCAUUGCAU"
                "GUAAUGUAGACCUAGUCCAUCAGAUCAUGUGUUCUGGAGAGUGUUCUUUA"
                "UUCAAUAAAGUUUUAAUUUAGUAUAAACAUA";
        EXPECT_STREQ(seq1, seqan::toCString((seqan::CharString)mrna_seqs[0]));

        const char *seq2 = "AACUGAAGAUUUCCUCUGGAAGCUACCACAUGCAAACAUACAAGCAGUCU"
                "CACCUCAGGCAUGUAUUUUGAAAAGCAUUUUGUCAUAUCCCCUCUCCUUA"
                "UUUUUCUAAUAUUUAGACUUUGAAUAUUUAGAACUAGAGUUCCUAUUUUC"
                "AGCUAGUUGAAAACAGAGAAAACCUAGUGAUUCUGUCUGGUCAUCCCACA"
                "CACCUCUCUACUGAGUGCUCCAGAGUCUUAGCUCACAUGCACUGAGAAUU"
                "CUUUACAGCAAAGAAGAGAUUUUUAGAGUGGGAAGAAGAGGCUUAUCCUU"
                "CUGCAUUAGUAUAAAGAGUCUGUAUUUUUAAUAAAUGUUAAAUAAGCUAA"
                "CAAUGUUUGUACUUAUGCAUUCCCCAUGGGUAAAAAUAAAUAAUAGCAUU"
                "GUUAAAGAUAGUUAUUACCAAAAAAAGAGAGUUAUUACAAAUAAAUAUGU"
                "CUCUUUAUUUUUAAAAAUGAAAUCUUAAUUCAUUUACUCUAUUUGAUGAU"
                "AAACUAUAAAUUCAUUGAAAAUGUGAAUUCUAUUAUGGGUAGCCUUUUUA"
                "CCAAUUAUAAGGAAAAUUUACAGCAGUGAACAUGAACAUUCACUUAGCUU"
                "CCUCAGUCUCUCCAUCUUAAAGAUCAUUUAUCAGAGGAGGUUCAGCAUUU"
                "UUUGCAGCAUAACUUUUCAUGAGUCUGUAUUACUAAUGGAUAAGUCAAAU"
                "CCAUCCUGCACUUCUACAGUUUAGAAAGUAUCUGGACUCAGAAUAAAUGU"
                "AAUAUUUAUACUUGUUUCCAGAAUGUUAUUUUACAUUUUAUGUUCAAUAA"
                "GAACACUUUUUAAAAGACGUAUAUUCAACAUAAAAUCAGCUAUCAGACUU"
                "CAGAUUAGACUUUAUUUAUGUGGGUCUAUAAUAAUUGUAUUUUCAAGAGG"
                "UUUUCACUAUAUUUGUAUUGGCCUGGUUUUCUCAGACGAUUUUGGACAAA"
                "UCAUUAGAAACUGGGCAUCAUAUCCACAGUUAUGUAAGGCAGUGAUAUAC"
                "UAUAAGGAUAAACAAAGUCAAGUCCAUAAAGCAAUAAUCCCUCAGAAGGA"
                "AAGUCCUUACUUUUCACAUAUUAAUAUUUAGUAAUUUUUCCUGCUUCUAA"
                "AAGUGAGAGUAUCACACCCUAAAUGAACACUGUCUACUAAGAGACAUCAU"
                "UCCAUUUCCACAAAUGAAGAUUUUAUUCCAAGAAACGAGUUUACUGAUUG"
                "GAGCAUAGGGCUUGUUGUUAUUUUUAUUCAAGCUUUUAGUAAUAGCCUUG"
                "AAUUUAUUAUUUUUCUUAUAGGCUUUUUGUUAAAAUAGUGAAGGAACAAA"
                "UGUUAAAGGGUAAGAUAAUUUCCCUGCAAAAGGACACAGAAGGCAGUCUU"
                "AAGAAGAUGAAUGGAUGAGAGAAGGGAGAGAAUAAAAUGCAAUAACGAGC"
                "CAGCAUUUACUAUGUAUUUUCUCCUCACCUGUCUCUCCAUAUUUAGGUCA"
                "CUUACCAGUUUCUGUGCCCUUUUGGAGCUUUUGUUGAGGGCUUCAUUCUC"
                "ACCCUGUAUUUCUUUAGCCCUAAAUUGACACUCUCUCCAAAAAUCCAUUC"
                "CAUUGUCUGUGGACCAAGAUGUUCUAUGUAAUUCAGAAGCAGAACUCUUG"
                "GCUAAAGGGCUAGUGUGGCCUUCAGAAACCAUUCAAUUAUUUUCUCCCUA"
                "CACCUUUGUCAGUUUGAAACCAGUGAGGAAAAAAGGUAUGUUGAUAAGAA"
                "ACCUAUAUUGCUAGGUAGAAUUUGUACUUGUUUUCUUGGUAGCAGUUUUG"
                "AAAUAUUCUGUACAGUACGUUCCUAUUGUUUAAUAAUAAAUUCAAAAAUA"
                "UUUCUAAAACCUUAAAACCAACUAUGCCAAGCAUUAAGAUAAACAAAUAU"
                "GAUGUUCUUUGACGUAAAUCAACGUGAUGAUUCUUUCACAUGUAAACACA"
                "UUUUAGUGUUUCUGGUUUGUCAUUUUUGUUGUUGUUGUUGUUGUUGUUAU"
                "UUACUCUAUACCCUUUAGCAAAAUACAGUUUUAAAUUUUUAUUGUUUUUA"
                "GUAGUUUCCCAACUUUAAGACUUAUCUAAUUUAACUGAGAAAGAAAGCCU"
                "UUUUCAUAUAUAUAUAUAUUGGAUUUCUAAGGAUGGUGGUUUGAGCCUUG"
                "AUUAGACUUUUGAUGUGCUAAGCCAGACAGGCAGUCUGUACAUUGAUGGC"
                "CAUCACAAUGCAGCUUUGGUUUAAUUUAAUUCAGGCCUGCUGCUGAGUUA"
                "UGCACAGACUUUUUGUUGACCAAAAUAAAAUAUAAAGGGUUUUCUUCUGU"
                "UUGACAUUUGUGUUCAUUUUUUCUCUUUAUGUAUUACAUUUUAACCUAUA"
                "UUAAAUAAAUGUUUAAAUGAUAAUUUGCUUAUGUCUUAUAAAACUCAGCA"
                "UAAGAAAAAU";
        EXPECT_STREQ(seq2, seqan::toCString((seqan::CharString)mrna_seqs[1]));

        const char *seq3 = "AAACCUGCAGUGAAACCUAUUGACAUGGCCACGCUGUGGAAUGAUGUGAA"
                "UUGGCCCUGUUUACAGAGGCAGUACAACUGAAUGUUAUUUUACAUCCAGA"
                "AUUUUGGCGUUCAGUAUAAGAGAAUGGUUCAUGUUACUCUUUCUCUCUCC"
                "AUCAGCUUCCUCACUGAAAAUGUGCAUUAAGUGCCUUGUAGAUACUAAUC"
                "AAGAAAGCUGUGAUUCUCCUCAAAGCGUAUUUUUGUGAAAUCUUUUAAGA"
                "GCCAGUAACAUACUUCUAGAGAACAGGAAAAGAGACUAGGAUAAUACAUC"
                "UUCCACACAUUUGGCCCACUGAUAAUGUUAAUUCUCUGGCGUAUUUCAAA"
                "GAACUUGUUCCUGGCUGAUCCAAGUGCAGUGGUAUUUACAACUAAUUGAU"
                "CACAACCAGUUUGUAGAUUUCUUUGUUCCUUCUCCAUUCCCACUGCUUCA"
                "CUUGCCUAGUCUUGAAGAAAAAAAACAAAAAACAAAAAAAAACCUUGUUC"
                "CUUUAUAGGUUCCUGGUAGAAUCAGUAGAGAUGAUUUCAGCUCAUUGACA"
                "UUUUUUUAAGCUAUAUCCCCUUGUCAUUCCAUUGAGAAAGCUGACAACUG"
                "GGAUAGGGAGGGGAUUAGAUAAUAGAUGGGGUCAAAUUCUGUGUGAAUGU"
                "GAACUUGCCUAGUAAGCACUUUGUCUCUGUUCACUACUGCGAUAGAGGAA"
                "AUCUAUCUCCCUAUCUUGGGUCCUUGAACUACAGCCUGCUGUCUUACACC"
                "AGUGGAGCUACCCUUUAAAUGUACAAAUUAUUUGUAUGCUAAUGUAAUAU"
                "GGUGAAAUUAAAAUAAAUCACACUGUUAAUUGUUUUCC";
        EXPECT_STREQ(seq3, seqan::toCString((seqan::CharString)mrna_seqs[2]));

        const char *seq4 = "CAACCAUAUCCCAAGAGCCAUUUAUCCUUGAGACUCAGACCACAUCUGCA"
                "ACCAAAUCAGCAUCCUGUCAUUUCGUGAAUGAAUCUCAGACGCUGUAACC"
                "CGGCAUCGAGUGCUGACCUUGUAAUGUAUGAGUUCACGGAAGAAGCACAA"
                "CCGAACGUCUUGUUCAGUGACAGCGCCGUAAGCACAGUGGGUGUGAUGCG"
                "UGACCCUGAAUGACACACUACAGAAUGUGAGCAGUGUGAGACUUCUCUCA"
                "CUGGCCUUGAAAUAAGAAAAUAUUGAACAUUUUAAUAUUAAAAAUAUUUC"
                "AGUGUUAACAAAUGUGCAUGAAGUUUAAUUAGGAAGGAAUGCUUUAUGUU"
                "AUGAAGGCUUUUUUUUUUUUUUUUGAGACGGAGUCUCGCUUUGUCAUCCA"
                "GGCUGGAGUGCAGUGGUGCGAUCUCAGCUCACUGCAACCUCGGCCUCCCG"
                "GGUUCAAGCAAUUCUCCUGCCUCAGCCUCCCGAGUAGCUGGGAUUACAGG"
                "CAUGGGCCACCACACCCAGCUAAUUUUUUGUGUUUUCUUUUUAGUAGAGA"
                "CGGGGUUUUACCAUGCUGGCCAGGCUGGCCUCAAACUCCUGACCUUGUGA"
                "UCCACCCACCUCAGCCUCCCAAAGUGCUGGGAUUACAGGCGUGAGUCACC"
                "GGGCAGGCUGUUCUGAAGCUUUUAGAUCUCAGGUCUAAGGCUUCCUUUCC"
                "CUCCCUCUCCCAGCUAGUUUGUGCUAAUUAAGAGACCUUUUAUACUGUUU"
                "UAUUGCCUGUUUGAAGAAAUAAUUUUUAUCACGUUUUUGUAAGAUAUCUA"
                "UAAUUUUAAAUGUUUAUAAAUUGUUUAAUUUAUUAGCAUCUUAAUGUACC"
                "CCAUUUUUAUAUACUGAAUGUGGCCUUUUGAGUGAAAUAGGAAGCUUCAU"
                "GGUGUUGGAGCCACCUUUGUACAGUUGUUUAAAGUUUCCCAUUGUCACGG"
                "AAAACAUUGGCUGCAAAGCCCCUCAAAGCCCUCAAGUGCCUUCUGUGAGU"
                "UUAAAUGUGCUGGUGCCCUCCAGAAAAGCCUCGGCCUCAGCUCCGUUUCC"
                "GCCUGUUCCCUCCCCCAGGAUAAUGAAUGGUUACUGCACUGUAAAGACCG"
                "UGGUCUCUUUUCACUAAAUAGGAGAUUCGAGUUUCCCAGUUUACAUGAAU"
                "GAAGUCUGAAUUUAAGACGGUGAUGAAACUGAGGUUCAGUACUCUCGGGA"
                "CUCGAGGAAAUUAUUCCUGAGACAUGGAGUAAUUCUUACAAAUUUAAACU"
                "AUUGUACAGAUCCACAUACAUGUUGUUAAGUACCUAAUGUUUUGCUGAAC"
                "UUUUAAAAGUUAAUUUCCAAAAUGUAUAGGGAUUCAUGAUAAUUAAACCU"
                "UUUUAUUGCUCAUUUUUUUAGUAGAAGAAUAUCACUUAUUUUUAGACUUG"
                "UAAAAUGUAUGAACUGGUGAGCGGACAUCUGUUAAGAGAGUCACUAGUCA"
                "GAAUGUUAAAGGAGUGCAUGCAGGAUGCCCCAAAUGUCGUGAACUCUUGU"
                "UACUCCUGUAUGUAGUAGUGUAAGCAUGUGACUUUUAACACCAUUUGGUU"
                "UGAAACUAAUGUAGAGAUGCCUGAUUCCAAACAGGUGUGGAGAAUAUUGA"
                "AUGGCUCAGAAGCCGCGUCCCUUACUUAACACAAUUCCGAAUCUCCCUCA"
                "UCCAUGAUGCGUCCAUUGGAUCACUCGCUGGUGGUCACUGUGUGGCAGUU"
                "ACUAGGGGAAUUCUGCCUCUGACUGUUCUUUUUCUUUUGGUCUUUAAACA"
                "CCCUGUCGUGGGAUGUGCUCACUGAUUUGUGGCUAUGUUGAAGGUAUCAC"
                "UUGUCUUGAGGGUUUUCAAUAUUUCAGGAUCAUGCUGGUGGCAAAAGGAC"
                "UCCACGCCUCUGUGGAAUCAUGUCCACAGGGGGACCUGCCUCCCGUGAUG"
                "UCCCACCUUUCCUUCAAGGUCUGUCAUAUGAGUCCUCCCCUUUUACAACA"
                "CUUAUUAUGGUAUUUUUCAAGUUAUUCUUCUUAGAUUUGCAGUACCUACU"
                "GAAAUUUGUGUUUUUAUAGUUGAAGUUAGGAAAAUGCUAUUUGAUUUGUA"
                "UUUAGAUAUUUAAGUCACUUGUCCAAUGAUGUGUAUGUCUAAGCCUCAUG"
                "UACCGAUUUGAAGUCAGACUUAAAAAUGUAUUUACAGAUUCACUUGAGAC"
                "UUUUUAAUCGGUUCUUCAAAUAUUUCAUGUUUACAUUAAAAAUUUCCAGA"
                "GAAGCAUAAAAGUAUUCACUUUCCUGCCUUGUCAUUUCUGGAAAGAUUUU"
                "GGGGAGAUAUUUUAUUGCAUAUUAAUUAAUAAAUUGUUCUACUAGG";
        EXPECT_STREQ(seq4, seqan::toCString((seqan::CharString)mrna_seqs[3]));
    }

    TEST_F(TestDS1, get_seed) {
        read_files();

        int get_seed_res;
        seqan::RnaString seed = "AAAAAA";

        get_seed_res = get_seed(mirna_seqs[0], seed);
        EXPECT_EQ(0, get_seed_res);
        EXPECT_STREQ("UGCCUU", seqan::toCString((seqan::CharString)seed));

        get_seed_res = get_seed(mirna_seqs[1], seed);
        EXPECT_EQ(0, get_seed_res);
        EXPECT_STREQ("CAUUCC", seqan::toCString((seqan::CharString)seed));
    }

    TEST_F(TestDS1, comp_ngram) {
        comp_ngram();
    }

    TEST_F(TestDS1, comp_bruteforce) {
        comp_bruteforce();
    }

    TEST_F(TestDS1, comp_horspool) {
        comp_horspool();
    }

    TEST_F(TestDS1, comp_suffixarray) {
        comp_suffixarray();
    }
}